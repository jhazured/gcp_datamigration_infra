- name: Setup GCP Resources
  hosts: localhost
  gather_facts: false

  vars:
    sa_email: "{{ service_account_name }}@{{ gcp_project_id }}.iam.gserviceaccount.com"

  tasks:
    - name: Create Artifact Registry (ignore if exists)
      shell: |
        gcloud artifacts repositories create {{ gcp_artifact_repo }} \
          --repository-format=docker \
          --location={{ gcp_region }} \
          --project={{ gcp_project_id }} \
          --quiet
      ignore_errors: true
      changed_when: false

    - name: Create GCS Bucket (ignore if exists)
      shell: |
        gsutil mb -p {{ gcp_project_id }} -l {{ gcp_region }} gs://{{ gcs_bucket_name }}
      ignore_errors: true
      changed_when: false

    - name: Create Service Account (ignore if exists)
      shell: |
        gcloud iam service-accounts create {{ service_account_name }} \
          --display-name="ETL Service Account" \
          --project={{ gcp_project_id }}
      ignore_errors: true
      changed_when: false

    - name: Bind roles to service account
      loop:
        - roles/artifactregistry.writer
        - roles/storage.objectAdmin
        - roles/secretmanager.admin
      loop_control:
        loop_var: role
      shell: |
        gcloud projects add-iam-policy-binding {{ gcp_project_id }} \
          --member="serviceAccount:{{ sa_email }}" \
          --role={{ role }} \
          --quiet
      ignore_errors: true
      changed_when: false

    - name: Generate .env file from template
      template:
        src: templates/.env.j2
        dest: ./env/.env

    - name: Upload .env to Secret Manager (ignore if exists)
      shell: |
        gcloud secrets create {{ gcp_credentials_secret_name }} \
          --replication-policy="automatic" \
          --data-file=./env/.env \
          --project={{ gcp_project_id }}
      ignore_errors: true
      changed_when: false
